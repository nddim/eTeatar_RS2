// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eTeatar.Services.Database;

#nullable disable

namespace eTeatar.Services.Migrations
{
    [DbContext(typeof(ETeatarContext))]
    partial class ETeatarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eTeatar.Services.Database.Dvorana", b =>
                {
                    b.Property<int>("DvoranaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DvoranaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("DvoranaId")
                        .HasName("PK__Dvorana__B534FBB1E4A1508C");

                    b.ToTable("Dvorana", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Glumac", b =>
                {
                    b.Property<int>("GlumacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlumacId"));

                    b.Property<string>("Biografija")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("GlumacId")
                        .HasName("PK__Glumac__7782EF2A330ECF0E");

                    b.ToTable("Glumac", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Hrana", b =>
                {
                    b.Property<int>("HranaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HranaId"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("HranaId")
                        .HasName("PK__Hrana__19AD0AEA4B1C6010");

                    b.ToTable("Hrana", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Kartum", b =>
                {
                    b.Property<int>("KartaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KartaId"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int?>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<int>("SjedisteId")
                        .HasColumnType("int");

                    b.Property<int>("TerminId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("KartaId")
                        .HasName("PK__Karta__EC3FA9EEAD399E80");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("SjedisteId");

                    b.HasIndex("TerminId");

                    b.ToTable("Karta");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumRodenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("Slika")
                        .HasMaxLength(2000)
                        .HasColumnType("varbinary(2000)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnik__80B06D41BBD960AE");

                    b.ToTable("Korisnik", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.KorisnikUloga", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikUlogaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("KorisnikUlogaId")
                        .HasName("PK__Korisnik__1608726EE6CFC106");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisnikUloga", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Ocjena", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OcjenaId"));

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("PredstavaId")
                        .HasColumnType("int");

                    b.Property<int>("Vrijednost")
                        .HasColumnType("int")
                        .HasColumnName("Vrijednost");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("OcjenaId")
                        .HasName("PK__Ocjena__E6FC7AA92AEC1C39");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PredstavaId");

                    b.ToTable("Ocjena", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Predstava", b =>
                {
                    b.Property<int>("PredstavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredstavaId"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Koreografija")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Produkcija")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Scenografija")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte[]>("Slika")
                        .HasMaxLength(2000)
                        .HasColumnType("varbinary(2000)");

                    b.Property<DateTime>("TrajanjeKraj")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TrajanjePocetak")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("PredstavaId")
                        .HasName("PK__Predstav__024E0E4A0BBF2AA0");

                    b.ToTable("Predstava", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.PredstavaGlumac", b =>
                {
                    b.Property<int>("PredstavaGlumacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredstavaGlumacId"));

                    b.Property<int>("GlumacId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PredstavaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("PredstavaGlumacId")
                        .HasName("PK__Predstav__2A010D82781F86EE");

                    b.HasIndex("GlumacId");

                    b.HasIndex("PredstavaId");

                    b.ToTable("PredstavaGlumac", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.PredstavaRepertoar", b =>
                {
                    b.Property<int>("PredstavaRepertoarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredstavaRepertoarId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PredstavaId")
                        .HasColumnType("int");

                    b.Property<int>("RepertoarId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("PredstavaRepertoarId");

                    b.HasIndex("PredstavaId");

                    b.HasIndex("RepertoarId");

                    b.ToTable("PredstavaRepertoar", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.PredstavaZanr", b =>
                {
                    b.Property<int>("PredstavaZanrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredstavaZanrId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PredstavaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.Property<int>("ZanrId")
                        .HasColumnType("int");

                    b.HasKey("PredstavaZanrId")
                        .HasName("PK__Predstav__67D6222F83EF3DAA");

                    b.HasIndex("PredstavaId");

                    b.HasIndex("ZanrId");

                    b.ToTable("PredstavaZanr", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Repertoar", b =>
                {
                    b.Property<int>("RepertoarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepertoarId"));

                    b.Property<DateTime>("DatumKraja")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("RepertoarId")
                        .HasName("PK__Repertoa__1018CC45DC2374D2");

                    b.ToTable("Repertoar", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervacijaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("TerminId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("RezervacijaId")
                        .HasName("PK__Rezervac__CABA44DDDA32E40D");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("TerminId");

                    b.ToTable("Rezervacija", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.RezervacijaSjediste", b =>
                {
                    b.Property<int>("RezervacijaSjedisteId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<int>("SjedisteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("RezervacijaSjedisteId");

                    b.ToTable("RezervacijaSjediste", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Sjediste", b =>
                {
                    b.Property<int>("SjedisteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SjedisteId"));

                    b.Property<int>("DvoranaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kolona")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Red")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("SjedisteId")
                        .HasName("PK__Sjediste__B2086AAA0744C421");

                    b.HasIndex("DvoranaId");

                    b.ToTable("Sjediste", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.StavkaUplate", b =>
                {
                    b.Property<int>("StavkaUplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StavkaUplateId"));

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("HranaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("UplataId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("StavkaUplateId")
                        .HasName("PK__StavkaUp__BFAFD85965F23692");

                    b.HasIndex("HranaId");

                    b.HasIndex("UplataId");

                    b.ToTable("StavkaUplate", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Termin", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("DvoranaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PredstavaId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("TerminId")
                        .HasName("PK__Termin__42126C95643B31F8");

                    b.HasIndex("DvoranaId");

                    b.HasIndex("PredstavaId");

                    b.ToTable("Termin", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("UlogaId")
                        .HasName("PK__Uloga__DCAB23CBA4EF472E");

                    b.ToTable("Uloga", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Uplatum", b =>
                {
                    b.Property<int>("UplataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UplataId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Iznos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("UplataId")
                        .HasName("PK__Uplata__C5B165E69C3A436D");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Uplata");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Vijest", b =>
                {
                    b.Property<int>("VijestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VijestId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Sadržaj")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("VijestId")
                        .HasName("PK__Vijest__F619121C860AB937");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Vijest", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Zanr", b =>
                {
                    b.Property<int>("ZanrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZanrId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("ZanrId")
                        .HasName("PK__Zanr__953868D37E250D1A");

                    b.ToTable("Zanr", (string)null);
                });

            modelBuilder.Entity("eTeatar.Services.Database.Kartum", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Karta")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKKarta115096");

                    b.HasOne("eTeatar.Services.Database.Rezervacija", "Rezervacija")
                        .WithMany("Karta")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("FKKarta75020");

                    b.HasOne("eTeatar.Services.Database.Sjediste", "Sjediste")
                        .WithMany("Karta")
                        .HasForeignKey("SjedisteId")
                        .IsRequired()
                        .HasConstraintName("FKKarta279567");

                    b.HasOne("eTeatar.Services.Database.Termin", "Termin")
                        .WithMany("Karta")
                        .HasForeignKey("TerminId")
                        .IsRequired()
                        .HasConstraintName("FKKarta684934");

                    b.Navigation("Korisnik");

                    b.Navigation("Rezervacija");

                    b.Navigation("Sjediste");

                    b.Navigation("Termin");
                });

            modelBuilder.Entity("eTeatar.Services.Database.KorisnikUloga", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Korisnik", "Korisnik")
                        .WithMany("KorisnikUlogas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKKorisnikUl810045");

                    b.HasOne("eTeatar.Services.Database.Uloga", "Uloga")
                        .WithMany("KorisnikUlogas")
                        .HasForeignKey("UlogaId")
                        .IsRequired()
                        .HasConstraintName("FKKorisnikUl220885");

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Ocjena", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Ocjenas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKOcjena731337");

                    b.HasOne("eTeatar.Services.Database.Predstava", "Predstava")
                        .WithMany("Ocjenas")
                        .HasForeignKey("PredstavaId")
                        .IsRequired()
                        .HasConstraintName("FKOcjena784566");

                    b.Navigation("Korisnik");

                    b.Navigation("Predstava");
                });

            modelBuilder.Entity("eTeatar.Services.Database.PredstavaGlumac", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Glumac", "Glumac")
                        .WithMany("PredstavaGlumacs")
                        .HasForeignKey("GlumacId")
                        .IsRequired()
                        .HasConstraintName("FKPredstavaG755270");

                    b.HasOne("eTeatar.Services.Database.Predstava", "Predstava")
                        .WithMany("PredstavaGlumacs")
                        .HasForeignKey("PredstavaId")
                        .IsRequired()
                        .HasConstraintName("FKPredstavaG242172");

                    b.Navigation("Glumac");

                    b.Navigation("Predstava");
                });

            modelBuilder.Entity("eTeatar.Services.Database.PredstavaRepertoar", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Predstava", "Predstava")
                        .WithMany("PredstavaRepertoars")
                        .HasForeignKey("PredstavaId")
                        .IsRequired();

                    b.HasOne("eTeatar.Services.Database.Repertoar", "Repertoar")
                        .WithMany("PredstavaRepertoars")
                        .HasForeignKey("RepertoarId")
                        .IsRequired();

                    b.Navigation("Predstava");

                    b.Navigation("Repertoar");
                });

            modelBuilder.Entity("eTeatar.Services.Database.PredstavaZanr", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Predstava", "Predstava")
                        .WithMany("PredstavaZanrs")
                        .HasForeignKey("PredstavaId")
                        .IsRequired()
                        .HasConstraintName("FKPredstavaZ211544");

                    b.HasOne("eTeatar.Services.Database.Zanr", "Zanr")
                        .WithMany("PredstavaZanrs")
                        .HasForeignKey("ZanrId")
                        .IsRequired()
                        .HasConstraintName("FKPredstavaZ6500");

                    b.Navigation("Predstava");

                    b.Navigation("Zanr");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Rezervacija", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKRezervacij849203");

                    b.HasOne("eTeatar.Services.Database.Termin", "Termin")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("TerminId")
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Termin");
                });

            modelBuilder.Entity("eTeatar.Services.Database.RezervacijaSjediste", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Rezervacija", "Rezervacija")
                        .WithMany("RezervacijaSjedistes")
                        .HasForeignKey("RezervacijaSjedisteId")
                        .IsRequired();

                    b.HasOne("eTeatar.Services.Database.Sjediste", "Sjediste")
                        .WithMany("RezervacijaSjedistes")
                        .HasForeignKey("RezervacijaSjedisteId")
                        .IsRequired()
                        .HasConstraintName("FKSjediste277089");

                    b.Navigation("Rezervacija");

                    b.Navigation("Sjediste");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Sjediste", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Dvorana", "Dvorana")
                        .WithMany("Sjedistes")
                        .HasForeignKey("DvoranaId")
                        .IsRequired()
                        .HasConstraintName("FKSjediste19417");

                    b.Navigation("Dvorana");
                });

            modelBuilder.Entity("eTeatar.Services.Database.StavkaUplate", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Hrana", "Hrana")
                        .WithMany("StavkaUplates")
                        .HasForeignKey("HranaId")
                        .IsRequired()
                        .HasConstraintName("FKStavkaUpla569574");

                    b.HasOne("eTeatar.Services.Database.Uplatum", "Uplata")
                        .WithMany("StavkaUplates")
                        .HasForeignKey("UplataId")
                        .IsRequired()
                        .HasConstraintName("FKStavkaUpla481381");

                    b.Navigation("Hrana");

                    b.Navigation("Uplata");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Termin", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Dvorana", "Dvorana")
                        .WithMany("Termins")
                        .HasForeignKey("DvoranaId")
                        .IsRequired()
                        .HasConstraintName("FKTermin31281");

                    b.HasOne("eTeatar.Services.Database.Predstava", "Predstava")
                        .WithMany("Termins")
                        .HasForeignKey("PredstavaId")
                        .IsRequired()
                        .HasConstraintName("FKTermin545750");

                    b.Navigation("Dvorana");

                    b.Navigation("Predstava");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Uplatum", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Uplata")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKUplata894550");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Vijest", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Vijests")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKVijest785774");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Dvorana", b =>
                {
                    b.Navigation("Sjedistes");

                    b.Navigation("Termins");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Glumac", b =>
                {
                    b.Navigation("PredstavaGlumacs");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Hrana", b =>
                {
                    b.Navigation("StavkaUplates");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Korisnik", b =>
                {
                    b.Navigation("Karta");

                    b.Navigation("KorisnikUlogas");

                    b.Navigation("Ocjenas");

                    b.Navigation("Rezervacijas");

                    b.Navigation("Uplata");

                    b.Navigation("Vijests");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Predstava", b =>
                {
                    b.Navigation("Ocjenas");

                    b.Navigation("PredstavaGlumacs");

                    b.Navigation("PredstavaRepertoars");

                    b.Navigation("PredstavaZanrs");

                    b.Navigation("Termins");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Repertoar", b =>
                {
                    b.Navigation("PredstavaRepertoars");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Rezervacija", b =>
                {
                    b.Navigation("Karta");

                    b.Navigation("RezervacijaSjedistes");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Sjediste", b =>
                {
                    b.Navigation("Karta");

                    b.Navigation("RezervacijaSjedistes");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Termin", b =>
                {
                    b.Navigation("Karta");

                    b.Navigation("Rezervacijas");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Uloga", b =>
                {
                    b.Navigation("KorisnikUlogas");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Uplatum", b =>
                {
                    b.Navigation("StavkaUplates");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Zanr", b =>
                {
                    b.Navigation("PredstavaZanrs");
                });
#pragma warning restore 612, 618
        }
    }
}
