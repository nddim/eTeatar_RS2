// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eTeatar.Services.Database;

#nullable disable

namespace eTeatar.Services.Migrations
{
    [DbContext(typeof(ETeatarContext))]
    [Migration("20250514201621_updateDbSeeda")]
    partial class updateDbSeeda
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eTeatar.Services.Database.Dvorana", b =>
                {
                    b.Property<int>("DvoranaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DvoranaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("DvoranaId")
                        .HasName("PK__Dvorana__B534FBB1E4A1508C");

                    b.ToTable("Dvorana", (string)null);

                    b.HasData(
                        new
                        {
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kapacitet = 49,
                            Naziv = "Dvorana 1"
                        },
                        new
                        {
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kapacitet = 36,
                            Naziv = "Dvorana 2"
                        },
                        new
                        {
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kapacitet = 25,
                            Naziv = "Dvorana 3"
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Glumac", b =>
                {
                    b.Property<int>("GlumacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GlumacId"));

                    b.Property<string>("Biografija")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("GlumacId")
                        .HasName("PK__Glumac__7782EF2A330ECF0E");

                    b.ToTable("Glumac", (string)null);

                    b.HasData(
                        new
                        {
                            GlumacId = 1,
                            Biografija = "Leonardo DiCaprio je američki glumac i producent, poznat po ulogama u filmovima kao što su 'Titanic', 'Inception', 'The Revenant' i 'The Wolf of Wall Street'. Dobitnik je Oskara i ekološki aktivista.",
                            Ime = "Leonardo",
                            IsDeleted = false,
                            Prezime = "DiCaprio"
                        },
                        new
                        {
                            GlumacId = 2,
                            Biografija = "Johnny Depp je američki glumac poznat po ekscentričnim i upečatljivim ulogama, posebno kao kapetan Jack Sparrow. Njegova karijera traje više od tri decenije.",
                            Ime = "Johnny",
                            IsDeleted = false,
                            Prezime = "Depp"
                        },
                        new
                        {
                            GlumacId = 3,
                            Biografija = "Mustafa Nadarević bio je jedan od najcjenjenijih glumaca bivše Jugoslavije. Poznat po ulogama u filmovima, serijama i pozorištu, ostavio je dubok trag u kulturi regije, naročito ulogom Izeta Fazlinovića.",
                            Ime = "Mustafa",
                            IsDeleted = false,
                            Prezime = "Nadarević"
                        },
                        new
                        {
                            GlumacId = 4,
                            Biografija = "Emir Hadžihafizbegović je jedan od najpoznatijih glumaca u BiH. Igrao je u brojnim filmovima i serijama u regiji, a poznat je po izražajnoj glumi i snažnim dramskim ulogama.",
                            Ime = "Emir",
                            IsDeleted = false,
                            Prezime = "Hadžihafizbegović"
                        },
                        new
                        {
                            GlumacId = 5,
                            Biografija = "Ermin Bravo je nagrađivani glumac iz BiH koji je ostvario značajne uloge u domaćim i međunarodnim filmovima. Takođe je aktivan u pozorištu i kao reditelj.",
                            Ime = "Ermin",
                            IsDeleted = false,
                            Prezime = "Bravo"
                        },
                        new
                        {
                            GlumacId = 6,
                            Biografija = "Senad Bašić je bosanskohercegovački glumac i univerzitetski profesor. Poznat je po bogatom glumačkom opusu, naročito po ulozi Faruka u seriji 'Lud, zbunjen, normalan'.",
                            Ime = "Senad",
                            IsDeleted = false,
                            Prezime = "Bašić"
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Kartum", b =>
                {
                    b.Property<int>("KartaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KartaId"));

                    b.Property<decimal>("Cijena")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int?>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<int>("SjedisteId")
                        .HasColumnType("int");

                    b.Property<int>("TerminId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.Property<bool?>("ukljucenaHrana")
                        .HasColumnType("bit");

                    b.HasKey("KartaId")
                        .HasName("PK__Karta__EC3FA9EEAD399E80");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("SjedisteId");

                    b.HasIndex("TerminId");

                    b.ToTable("Karta");

                    b.HasData(
                        new
                        {
                            KartaId = 1,
                            Cijena = 10m,
                            IsDeleted = false,
                            KorisnikId = 2,
                            SjedisteId = 2,
                            TerminId = 22,
                            ukljucenaHrana = true
                        },
                        new
                        {
                            KartaId = 2,
                            Cijena = 10m,
                            IsDeleted = false,
                            KorisnikId = 2,
                            SjedisteId = 3,
                            TerminId = 22,
                            ukljucenaHrana = true
                        },
                        new
                        {
                            KartaId = 3,
                            Cijena = 10m,
                            IsDeleted = false,
                            KorisnikId = 2,
                            SjedisteId = 89,
                            TerminId = 30,
                            ukljucenaHrana = false
                        },
                        new
                        {
                            KartaId = 4,
                            Cijena = 10m,
                            IsDeleted = false,
                            KorisnikId = 2,
                            SjedisteId = 90,
                            TerminId = 30,
                            ukljucenaHrana = false
                        },
                        new
                        {
                            KartaId = 5,
                            Cijena = 10m,
                            IsDeleted = false,
                            KorisnikId = 2,
                            SjedisteId = 10,
                            TerminId = 60,
                            ukljucenaHrana = true
                        },
                        new
                        {
                            KartaId = 6,
                            Cijena = 10m,
                            IsDeleted = false,
                            KorisnikId = 2,
                            SjedisteId = 11,
                            TerminId = 60,
                            ukljucenaHrana = true
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumRodenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LozinkaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LozinkaSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Slika")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnik__80B06D41BBD960AE");

                    b.ToTable("Korisnik", (string)null);

                    b.HasData(
                        new
                        {
                            KorisnikId = 1,
                            DatumRegistracije = new DateTime(2025, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodenja = new DateTime(2002, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@eteatar.com",
                            Ime = "Admin",
                            IsDeleted = false,
                            KorisnickoIme = "admin",
                            LozinkaHash = "Agw/bMTUSAFhUokkvB7TO8MCeog=",
                            LozinkaSalt = "U3/wrAznwLRJH55vtPWHew==",
                            Prezime = "Admin",
                            Telefon = "+60456456"
                        },
                        new
                        {
                            KorisnikId = 2,
                            DatumRegistracije = new DateTime(2025, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumRodenja = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mobile@eteatar.com",
                            Ime = "Mobile",
                            IsDeleted = false,
                            KorisnickoIme = "mobile",
                            LozinkaHash = "PT2xyqoSvBlVw+JOSdhqKTMTyWs=",
                            LozinkaSalt = "pebmamqt/rufY8AszeYBbw==",
                            Prezime = "Mobile",
                            Telefon = "+60123123"
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.KorisnikUloga", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikUlogaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("KorisnikUlogaId")
                        .HasName("PK__Korisnik__1608726EE6CFC106");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisnikUloga", (string)null);

                    b.HasData(
                        new
                        {
                            KorisnikUlogaId = 1,
                            IsDeleted = false,
                            KorisnikId = 1,
                            UlogaId = 1
                        },
                        new
                        {
                            KorisnikUlogaId = 2,
                            IsDeleted = false,
                            KorisnikId = 2,
                            UlogaId = 2
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Ocjena", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OcjenaId"));

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("PredstavaId")
                        .HasColumnType("int");

                    b.Property<int>("Vrijednost")
                        .HasColumnType("int")
                        .HasColumnName("Vrijednost");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("OcjenaId")
                        .HasName("PK__Ocjena__E6FC7AA92AEC1C39");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PredstavaId");

                    b.ToTable("Ocjena", (string)null);

                    b.HasData(
                        new
                        {
                            OcjenaId = 1,
                            DatumKreiranja = new DateTime(2025, 5, 9, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Komentar = "Odlična predstava!",
                            KorisnikId = 2,
                            PredstavaId = 1,
                            Vrijednost = 4
                        },
                        new
                        {
                            OcjenaId = 2,
                            DatumKreiranja = new DateTime(2025, 5, 10, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Komentar = "Gluma fantastična, priča zanimljiva.",
                            KorisnikId = 2,
                            PredstavaId = 2,
                            Vrijednost = 5
                        },
                        new
                        {
                            OcjenaId = 3,
                            DatumKreiranja = new DateTime(2025, 5, 11, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Komentar = "Dobar pokušaj, ali može bolje.",
                            KorisnikId = 2,
                            PredstavaId = 3,
                            Vrijednost = 3
                        },
                        new
                        {
                            OcjenaId = 4,
                            DatumKreiranja = new DateTime(2025, 5, 12, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Komentar = "Bravo za produkciju i režiju!",
                            KorisnikId = 2,
                            PredstavaId = 4,
                            Vrijednost = 5
                        },
                        new
                        {
                            OcjenaId = 5,
                            DatumKreiranja = new DateTime(2025, 5, 12, 14, 45, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Komentar = "Veoma emotivno i snažno.",
                            KorisnikId = 2,
                            PredstavaId = 5,
                            Vrijednost = 4
                        },
                        new
                        {
                            OcjenaId = 6,
                            DatumKreiranja = new DateTime(2025, 5, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Komentar = "Svaka čast glumcima!",
                            KorisnikId = 1,
                            PredstavaId = 1,
                            Vrijednost = 5
                        },
                        new
                        {
                            OcjenaId = 7,
                            DatumKreiranja = new DateTime(2025, 5, 11, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Komentar = "Solidno, ali nije ostavilo jak utisak.",
                            KorisnikId = 1,
                            PredstavaId = 2,
                            Vrijednost = 3
                        },
                        new
                        {
                            OcjenaId = 8,
                            DatumKreiranja = new DateTime(2025, 5, 11, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Komentar = "Zanimljiva priča i dobar ritam.",
                            KorisnikId = 1,
                            PredstavaId = 4,
                            Vrijednost = 4
                        },
                        new
                        {
                            OcjenaId = 9,
                            DatumKreiranja = new DateTime(2025, 5, 12, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Komentar = "Režija i scenografija vrhunski odrađeni.",
                            KorisnikId = 1,
                            PredstavaId = 9,
                            Vrijednost = 4
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Predstava", b =>
                {
                    b.Property<int>("PredstavaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredstavaId"));

                    b.Property<decimal>("Cijena")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Koreografija")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Produkcija")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Scenografija")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Slika")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Trajanje")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("PredstavaId")
                        .HasName("PK__Predstav__024E0E4A0BBF2AA0");

                    b.ToTable("Predstava", (string)null);

                    b.HasData(
                        new
                        {
                            PredstavaId = 1,
                            Cijena = 10m,
                            IsDeleted = false,
                            Koreografija = "Fadil Opancic",
                            Naziv = "Ajmo na fuka",
                            Opis = "Predstava govori o odnosu dvojice vojnika, pripadnika Hrvatskog vijeca odbrane i Armije Republike Bosne i Hercegovine.",
                            Produkcija = "Leon Lucic",
                            Scenografija = "Ivan Primorac",
                            Trajanje = 120
                        },
                        new
                        {
                            PredstavaId = 2,
                            Cijena = 10m,
                            IsDeleted = false,
                            Koreografija = "Fadil Opancic",
                            Naziv = "Ne igraj na engleze",
                            Opis = "Tri prijatelja. Tri kladionicara. Tri suprotstavljena uloga. Jedna utakmica. I ta jedna utakmica bi trebala da riješi sve njihove probleme. I umjesto da ih riješi, ta utakmica ce pokrenuti razgovor o svim problemima u njihovim medusobnim odnosima.",
                            Produkcija = "Leon Lucic",
                            Scenografija = "Ivan Primorac",
                            Trajanje = 120
                        },
                        new
                        {
                            PredstavaId = 3,
                            Cijena = 10m,
                            IsDeleted = false,
                            Koreografija = "Fadil Opancic",
                            Naziv = "Audicija",
                            Opis = "Kultna komedija koja je postala klasik bivše Jugoslavije",
                            Produkcija = "Leon Lucic",
                            Scenografija = "Ivan Primorac",
                            Trajanje = 120
                        },
                        new
                        {
                            PredstavaId = 4,
                            Cijena = 10m,
                            IsDeleted = false,
                            Koreografija = "Fadil Opancic",
                            Naziv = "Legenda o Ali-paši",
                            Opis = "Osnovni kostur ili skelet priče Legende o Ali-paši predstavlja preobrazba Alije Leptira od hamala do visokog dostojanstvenika. Ta se preobrazba prvo zbiva u snu, a onda i zbiljski ostvaruje u njegovom životu. ",
                            Produkcija = "Leon Lucic",
                            Scenografija = "Ivan Primorac",
                            Trajanje = 120
                        },
                        new
                        {
                            PredstavaId = 5,
                            Cijena = 10m,
                            IsDeleted = false,
                            Koreografija = "Fadil Opancic",
                            Naziv = "Balkanski špijun",
                            Opis = "Balkanski špijun, kultni je naslov čiji su citati postali dio opće kulture i ušli u usmenu predaju kao suvenir iz vremena, sustava vrijednosti i života ljudi od kojeg se udaljavamo posljednjih četrdesetak godina ili bar tako vjerujemo.",
                            Produkcija = "Leon Lucic",
                            Scenografija = "Ivan Primorac",
                            Trajanje = 120
                        },
                        new
                        {
                            PredstavaId = 6,
                            Cijena = 10m,
                            IsDeleted = false,
                            Koreografija = "Fadil Opancic",
                            Naziv = "Identitluk",
                            Opis = "Kad danas u Bosni i Hercegovini citamo eseje francuskog Libanonca Amina Maaloufa napisane prije dvadesetak godina, cine se tako inspirativni i na svakoj drugoj stranici imamo potrebu glasno se s autorom složiti.",
                            Produkcija = "Leon Lucic",
                            Scenografija = "Ivan Primorac",
                            Trajanje = 120
                        },
                        new
                        {
                            PredstavaId = 7,
                            Cijena = 10m,
                            IsDeleted = false,
                            Koreografija = "Fadil Opancic",
                            Naziv = "Zbogom, Kalifornijo!",
                            Opis = "Predstava je, kao i tekst, zamišljena kao posveta svim Mostarcima, onima koji su ostali u gradu i onima koji su ga napustili, ali i onima koji ga i dalje napuštaju, i onome što je nekada bio i što je sada grad Mostar.",
                            Produkcija = "Leon Lucic",
                            Scenografija = "Ivan Primorac",
                            Trajanje = 120
                        },
                        new
                        {
                            PredstavaId = 8,
                            Cijena = 10m,
                            IsDeleted = false,
                            Koreografija = "Fadil Opancic",
                            Naziv = "Ludilo u ...",
                            Opis = "Ludilo u... je predstava u kojoj tretiramo Joneskov predložak kao polaznu tacku za predstavu koja se bavi zajednicom izmedu muškarca i žene. Koliko se pojam zajednice promijenio i koliko je drugaciji danas? Koliko geografija u tome ima udjela? Da li je danas zajednica zapravo samo klasno pitanje? ",
                            Produkcija = "Leon Lucic",
                            Scenografija = "Ivan Primorac",
                            Trajanje = 120
                        },
                        new
                        {
                            PredstavaId = 9,
                            Cijena = 10m,
                            IsDeleted = false,
                            Koreografija = "Fadil Opancic",
                            Naziv = "Kokoška",
                            Opis = "Ovaj izuzetno zanimljivi tekst opisuje intimu života glumaca i glumica, život iza kulisa i postavlja pitanje: gdje je i da li se uopće može povući jasna distinkcija između teatra i života.",
                            Produkcija = "Leon Lucic",
                            Scenografija = "Ivan Primorac",
                            Trajanje = 120
                        },
                        new
                        {
                            PredstavaId = 10,
                            Cijena = 10m,
                            IsDeleted = false,
                            Koreografija = "Fadil Opancic",
                            Naziv = "Hasanaginica",
                            Opis = "Hasanaginica je jedna brutalno iskrena predstava. Svi ti likovi i svi ti zapleti, svaki sukob i svaka kap ljudskosti, iscijeđena je iz iskustva nas samih, članova ekipe koja je stvorila djelo.",
                            Produkcija = "Leon Lucic",
                            Scenografija = "Ivan Primorac",
                            Trajanje = 120
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.PredstavaGlumac", b =>
                {
                    b.Property<int>("PredstavaGlumacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredstavaGlumacId"));

                    b.Property<int>("GlumacId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PredstavaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("PredstavaGlumacId")
                        .HasName("PK__Predstav__2A010D82781F86EE");

                    b.HasIndex("GlumacId");

                    b.HasIndex("PredstavaId");

                    b.ToTable("PredstavaGlumac", (string)null);

                    b.HasData(
                        new
                        {
                            PredstavaGlumacId = 1,
                            GlumacId = 1,
                            IsDeleted = false,
                            PredstavaId = 1
                        },
                        new
                        {
                            PredstavaGlumacId = 2,
                            GlumacId = 2,
                            IsDeleted = false,
                            PredstavaId = 1
                        },
                        new
                        {
                            PredstavaGlumacId = 3,
                            GlumacId = 3,
                            IsDeleted = false,
                            PredstavaId = 1
                        },
                        new
                        {
                            PredstavaGlumacId = 4,
                            GlumacId = 2,
                            IsDeleted = false,
                            PredstavaId = 2
                        },
                        new
                        {
                            PredstavaGlumacId = 5,
                            GlumacId = 4,
                            IsDeleted = false,
                            PredstavaId = 2
                        },
                        new
                        {
                            PredstavaGlumacId = 6,
                            GlumacId = 5,
                            IsDeleted = false,
                            PredstavaId = 3
                        },
                        new
                        {
                            PredstavaGlumacId = 7,
                            GlumacId = 1,
                            IsDeleted = false,
                            PredstavaId = 3
                        },
                        new
                        {
                            PredstavaGlumacId = 8,
                            GlumacId = 6,
                            IsDeleted = false,
                            PredstavaId = 3
                        },
                        new
                        {
                            PredstavaGlumacId = 9,
                            GlumacId = 3,
                            IsDeleted = false,
                            PredstavaId = 4
                        },
                        new
                        {
                            PredstavaGlumacId = 10,
                            GlumacId = 4,
                            IsDeleted = false,
                            PredstavaId = 4
                        },
                        new
                        {
                            PredstavaGlumacId = 11,
                            GlumacId = 2,
                            IsDeleted = false,
                            PredstavaId = 5
                        },
                        new
                        {
                            PredstavaGlumacId = 12,
                            GlumacId = 5,
                            IsDeleted = false,
                            PredstavaId = 5
                        },
                        new
                        {
                            PredstavaGlumacId = 13,
                            GlumacId = 6,
                            IsDeleted = false,
                            PredstavaId = 5
                        },
                        new
                        {
                            PredstavaGlumacId = 14,
                            GlumacId = 1,
                            IsDeleted = false,
                            PredstavaId = 6
                        },
                        new
                        {
                            PredstavaGlumacId = 15,
                            GlumacId = 3,
                            IsDeleted = false,
                            PredstavaId = 6
                        },
                        new
                        {
                            PredstavaGlumacId = 16,
                            GlumacId = 6,
                            IsDeleted = false,
                            PredstavaId = 6
                        },
                        new
                        {
                            PredstavaGlumacId = 17,
                            GlumacId = 2,
                            IsDeleted = false,
                            PredstavaId = 7
                        },
                        new
                        {
                            PredstavaGlumacId = 18,
                            GlumacId = 4,
                            IsDeleted = false,
                            PredstavaId = 7
                        },
                        new
                        {
                            PredstavaGlumacId = 19,
                            GlumacId = 1,
                            IsDeleted = false,
                            PredstavaId = 8
                        },
                        new
                        {
                            PredstavaGlumacId = 20,
                            GlumacId = 5,
                            IsDeleted = false,
                            PredstavaId = 8
                        },
                        new
                        {
                            PredstavaGlumacId = 21,
                            GlumacId = 6,
                            IsDeleted = false,
                            PredstavaId = 8
                        },
                        new
                        {
                            PredstavaGlumacId = 22,
                            GlumacId = 3,
                            IsDeleted = false,
                            PredstavaId = 8
                        },
                        new
                        {
                            PredstavaGlumacId = 23,
                            GlumacId = 4,
                            IsDeleted = false,
                            PredstavaId = 9
                        },
                        new
                        {
                            PredstavaGlumacId = 24,
                            GlumacId = 1,
                            IsDeleted = false,
                            PredstavaId = 9
                        },
                        new
                        {
                            PredstavaGlumacId = 25,
                            GlumacId = 2,
                            IsDeleted = false,
                            PredstavaId = 10
                        },
                        new
                        {
                            PredstavaGlumacId = 26,
                            GlumacId = 3,
                            IsDeleted = false,
                            PredstavaId = 10
                        },
                        new
                        {
                            PredstavaGlumacId = 27,
                            GlumacId = 4,
                            IsDeleted = false,
                            PredstavaId = 10
                        },
                        new
                        {
                            PredstavaGlumacId = 28,
                            GlumacId = 5,
                            IsDeleted = false,
                            PredstavaId = 10
                        },
                        new
                        {
                            PredstavaGlumacId = 29,
                            GlumacId = 1,
                            IsDeleted = false,
                            PredstavaId = 10
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.PredstavaRepertoar", b =>
                {
                    b.Property<int>("PredstavaRepertoarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredstavaRepertoarId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PredstavaId")
                        .HasColumnType("int");

                    b.Property<int>("RepertoarId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("PredstavaRepertoarId");

                    b.HasIndex("PredstavaId");

                    b.HasIndex("RepertoarId");

                    b.ToTable("PredstavaRepertoar", (string)null);

                    b.HasData(
                        new
                        {
                            PredstavaRepertoarId = 1,
                            IsDeleted = false,
                            PredstavaId = 1,
                            RepertoarId = 1
                        },
                        new
                        {
                            PredstavaRepertoarId = 2,
                            IsDeleted = false,
                            PredstavaId = 2,
                            RepertoarId = 1
                        },
                        new
                        {
                            PredstavaRepertoarId = 3,
                            IsDeleted = false,
                            PredstavaId = 3,
                            RepertoarId = 1
                        },
                        new
                        {
                            PredstavaRepertoarId = 4,
                            IsDeleted = false,
                            PredstavaId = 2,
                            RepertoarId = 2
                        },
                        new
                        {
                            PredstavaRepertoarId = 5,
                            IsDeleted = false,
                            PredstavaId = 3,
                            RepertoarId = 2
                        },
                        new
                        {
                            PredstavaRepertoarId = 6,
                            IsDeleted = false,
                            PredstavaId = 4,
                            RepertoarId = 2
                        },
                        new
                        {
                            PredstavaRepertoarId = 7,
                            IsDeleted = false,
                            PredstavaId = 5,
                            RepertoarId = 2
                        },
                        new
                        {
                            PredstavaRepertoarId = 8,
                            IsDeleted = false,
                            PredstavaId = 6,
                            RepertoarId = 2
                        },
                        new
                        {
                            PredstavaRepertoarId = 9,
                            IsDeleted = false,
                            PredstavaId = 7,
                            RepertoarId = 2
                        },
                        new
                        {
                            PredstavaRepertoarId = 10,
                            IsDeleted = false,
                            PredstavaId = 3,
                            RepertoarId = 3
                        },
                        new
                        {
                            PredstavaRepertoarId = 11,
                            IsDeleted = false,
                            PredstavaId = 4,
                            RepertoarId = 3
                        },
                        new
                        {
                            PredstavaRepertoarId = 12,
                            IsDeleted = false,
                            PredstavaId = 5,
                            RepertoarId = 3
                        },
                        new
                        {
                            PredstavaRepertoarId = 13,
                            IsDeleted = false,
                            PredstavaId = 6,
                            RepertoarId = 3
                        },
                        new
                        {
                            PredstavaRepertoarId = 14,
                            IsDeleted = false,
                            PredstavaId = 7,
                            RepertoarId = 3
                        },
                        new
                        {
                            PredstavaRepertoarId = 15,
                            IsDeleted = false,
                            PredstavaId = 8,
                            RepertoarId = 3
                        },
                        new
                        {
                            PredstavaRepertoarId = 16,
                            IsDeleted = false,
                            PredstavaId = 9,
                            RepertoarId = 3
                        },
                        new
                        {
                            PredstavaRepertoarId = 17,
                            IsDeleted = false,
                            PredstavaId = 1,
                            RepertoarId = 3
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.PredstavaZanr", b =>
                {
                    b.Property<int>("PredstavaZanrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredstavaZanrId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PredstavaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.Property<int>("ZanrId")
                        .HasColumnType("int");

                    b.HasKey("PredstavaZanrId")
                        .HasName("PK__Predstav__67D6222F83EF3DAA");

                    b.HasIndex("PredstavaId");

                    b.HasIndex("ZanrId");

                    b.ToTable("PredstavaZanr", (string)null);

                    b.HasData(
                        new
                        {
                            PredstavaZanrId = 1,
                            IsDeleted = false,
                            PredstavaId = 1,
                            ZanrId = 2
                        },
                        new
                        {
                            PredstavaZanrId = 2,
                            IsDeleted = false,
                            PredstavaId = 1,
                            ZanrId = 5
                        },
                        new
                        {
                            PredstavaZanrId = 3,
                            IsDeleted = false,
                            PredstavaId = 2,
                            ZanrId = 1
                        },
                        new
                        {
                            PredstavaZanrId = 4,
                            IsDeleted = false,
                            PredstavaId = 2,
                            ZanrId = 6
                        },
                        new
                        {
                            PredstavaZanrId = 5,
                            IsDeleted = false,
                            PredstavaId = 3,
                            ZanrId = 1
                        },
                        new
                        {
                            PredstavaZanrId = 6,
                            IsDeleted = false,
                            PredstavaId = 3,
                            ZanrId = 6
                        },
                        new
                        {
                            PredstavaZanrId = 7,
                            IsDeleted = false,
                            PredstavaId = 3,
                            ZanrId = 4
                        },
                        new
                        {
                            PredstavaZanrId = 8,
                            IsDeleted = false,
                            PredstavaId = 4,
                            ZanrId = 3
                        },
                        new
                        {
                            PredstavaZanrId = 9,
                            IsDeleted = false,
                            PredstavaId = 4,
                            ZanrId = 2
                        },
                        new
                        {
                            PredstavaZanrId = 10,
                            IsDeleted = false,
                            PredstavaId = 5,
                            ZanrId = 6
                        },
                        new
                        {
                            PredstavaZanrId = 11,
                            IsDeleted = false,
                            PredstavaId = 5,
                            ZanrId = 1
                        },
                        new
                        {
                            PredstavaZanrId = 12,
                            IsDeleted = false,
                            PredstavaId = 6,
                            ZanrId = 2
                        },
                        new
                        {
                            PredstavaZanrId = 13,
                            IsDeleted = false,
                            PredstavaId = 7,
                            ZanrId = 2
                        },
                        new
                        {
                            PredstavaZanrId = 14,
                            IsDeleted = false,
                            PredstavaId = 7,
                            ZanrId = 3
                        },
                        new
                        {
                            PredstavaZanrId = 15,
                            IsDeleted = false,
                            PredstavaId = 8,
                            ZanrId = 5
                        },
                        new
                        {
                            PredstavaZanrId = 16,
                            IsDeleted = false,
                            PredstavaId = 8,
                            ZanrId = 4
                        },
                        new
                        {
                            PredstavaZanrId = 17,
                            IsDeleted = false,
                            PredstavaId = 9,
                            ZanrId = 6
                        },
                        new
                        {
                            PredstavaZanrId = 18,
                            IsDeleted = false,
                            PredstavaId = 9,
                            ZanrId = 2
                        },
                        new
                        {
                            PredstavaZanrId = 19,
                            IsDeleted = false,
                            PredstavaId = 10,
                            ZanrId = 3
                        },
                        new
                        {
                            PredstavaZanrId = 20,
                            IsDeleted = false,
                            PredstavaId = 10,
                            ZanrId = 2
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Repertoar", b =>
                {
                    b.Property<int>("RepertoarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepertoarId"));

                    b.Property<DateTime>("DatumKraja")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DatumPocetka")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("RepertoarId")
                        .HasName("PK__Repertoa__1018CC45DC2374D2");

                    b.ToTable("Repertoar", (string)null);

                    b.HasData(
                        new
                        {
                            RepertoarId = 1,
                            DatumKraja = new DateTime(2025, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumPocetka = new DateTime(2025, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Naziv = "Repertoar 1",
                            Opis = "Repertoar 1"
                        },
                        new
                        {
                            RepertoarId = 2,
                            DatumKraja = new DateTime(2025, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumPocetka = new DateTime(2025, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Naziv = "Repertoar 2",
                            Opis = "Repertoar 2"
                        },
                        new
                        {
                            RepertoarId = 3,
                            DatumKraja = new DateTime(2025, 8, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatumPocetka = new DateTime(2025, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Naziv = "Repertoar 3",
                            Opis = "Repertoar 3"
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervacijaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("StateMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TerminId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("RezervacijaId")
                        .HasName("PK__Rezervac__CABA44DDDA32E40D");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("TerminId");

                    b.ToTable("Rezervacija", (string)null);

                    b.HasData(
                        new
                        {
                            RezervacijaId = 1,
                            IsDeleted = false,
                            KorisnikId = 2,
                            StateMachine = "Kreirano",
                            TerminId = 3
                        },
                        new
                        {
                            RezervacijaId = 2,
                            IsDeleted = false,
                            KorisnikId = 2,
                            StateMachine = "Kreirano",
                            TerminId = 5
                        },
                        new
                        {
                            RezervacijaId = 3,
                            IsDeleted = false,
                            KorisnikId = 2,
                            StateMachine = "Kreirano",
                            TerminId = 7
                        },
                        new
                        {
                            RezervacijaId = 4,
                            IsDeleted = false,
                            KorisnikId = 2,
                            StateMachine = "Odobreno",
                            TerminId = 10
                        },
                        new
                        {
                            RezervacijaId = 5,
                            IsDeleted = false,
                            KorisnikId = 2,
                            StateMachine = "Odobreno",
                            TerminId = 12
                        },
                        new
                        {
                            RezervacijaId = 6,
                            IsDeleted = false,
                            KorisnikId = 2,
                            StateMachine = "Odobreno",
                            TerminId = 15
                        },
                        new
                        {
                            RezervacijaId = 7,
                            IsDeleted = false,
                            KorisnikId = 2,
                            StateMachine = "Ponisteno",
                            TerminId = 20
                        },
                        new
                        {
                            RezervacijaId = 8,
                            IsDeleted = false,
                            KorisnikId = 2,
                            StateMachine = "Zavrseno",
                            TerminId = 22
                        },
                        new
                        {
                            RezervacijaId = 9,
                            IsDeleted = false,
                            KorisnikId = 2,
                            StateMachine = "Zavrseno",
                            TerminId = 30
                        },
                        new
                        {
                            RezervacijaId = 10,
                            IsDeleted = false,
                            KorisnikId = 2,
                            StateMachine = "Zavrseno",
                            TerminId = 46
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.RezervacijaSjediste", b =>
                {
                    b.Property<int>("RezervacijaSjedisteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervacijaSjedisteId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<int>("SjedisteId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime2");

                    b.HasKey("RezervacijaSjedisteId");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("SjedisteId");

                    b.ToTable("RezervacijaSjediste", (string)null);

                    b.HasData(
                        new
                        {
                            RezervacijaSjedisteId = 1,
                            IsDeleted = false,
                            RezervacijaId = 1,
                            SjedisteId = 86
                        },
                        new
                        {
                            RezervacijaSjedisteId = 2,
                            IsDeleted = false,
                            RezervacijaId = 2,
                            SjedisteId = 55
                        },
                        new
                        {
                            RezervacijaSjedisteId = 3,
                            IsDeleted = false,
                            RezervacijaId = 3,
                            SjedisteId = 23
                        },
                        new
                        {
                            RezervacijaSjedisteId = 4,
                            IsDeleted = false,
                            RezervacijaId = 4,
                            SjedisteId = 9
                        },
                        new
                        {
                            RezervacijaSjedisteId = 5,
                            IsDeleted = false,
                            RezervacijaId = 5,
                            SjedisteId = 98
                        },
                        new
                        {
                            RezervacijaSjedisteId = 6,
                            IsDeleted = false,
                            RezervacijaId = 6,
                            SjedisteId = 94
                        },
                        new
                        {
                            RezervacijaSjedisteId = 7,
                            IsDeleted = false,
                            RezervacijaId = 7,
                            SjedisteId = 68
                        },
                        new
                        {
                            RezervacijaSjedisteId = 8,
                            IsDeleted = false,
                            RezervacijaId = 8,
                            SjedisteId = 31
                        },
                        new
                        {
                            RezervacijaSjedisteId = 9,
                            IsDeleted = false,
                            RezervacijaId = 9,
                            SjedisteId = 101
                        },
                        new
                        {
                            RezervacijaSjedisteId = 10,
                            IsDeleted = false,
                            RezervacijaId = 10,
                            SjedisteId = 44
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Sjediste", b =>
                {
                    b.Property<int>("SjedisteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SjedisteId"));

                    b.Property<int>("DvoranaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kolona")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Red")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("SjedisteId")
                        .HasName("PK__Sjediste__B2086AAA0744C421");

                    b.HasIndex("DvoranaId");

                    b.ToTable("Sjediste", (string)null);

                    b.HasData(
                        new
                        {
                            SjedisteId = 1,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 2,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 3,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 4,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 5,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 6,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 7,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "7",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 8,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 9,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 10,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 11,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 12,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 13,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 14,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "7",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 15,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 16,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 17,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 18,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 19,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 20,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 21,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "7",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 22,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 23,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 24,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 25,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 26,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 27,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 28,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "7",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 29,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 30,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 31,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 32,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 33,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 34,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 35,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "7",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 36,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 37,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 38,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 39,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 40,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 41,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 42,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "7",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 43,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "G",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 44,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "G",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 45,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "G",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 46,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "G",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 47,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "G",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 48,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "G",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 49,
                            DvoranaId = 1,
                            IsDeleted = false,
                            Kolona = "7",
                            Red = "G",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 50,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 51,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 52,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 53,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 54,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 55,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 56,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 57,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 58,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 59,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 60,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 61,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 62,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 63,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 64,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 65,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 66,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 67,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 68,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 69,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 70,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 71,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 72,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 73,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 74,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 75,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 76,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 77,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 78,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 79,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 80,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 81,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 82,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 83,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 84,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 85,
                            DvoranaId = 2,
                            IsDeleted = false,
                            Kolona = "6",
                            Red = "F",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 86,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 87,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 88,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 89,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 90,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "A",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 91,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 92,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 93,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 94,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 95,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "B",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 96,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 97,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 98,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 99,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 100,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "C",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 101,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 102,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 103,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 104,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 105,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "D",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 106,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "1",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 107,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "2",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 108,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "3",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 109,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "4",
                            Red = "E",
                            Status = "Aktivno"
                        },
                        new
                        {
                            SjedisteId = 110,
                            DvoranaId = 3,
                            IsDeleted = false,
                            Kolona = "5",
                            Red = "E",
                            Status = "Aktivno"
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.StavkaUplate", b =>
                {
                    b.Property<int>("StavkaUplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StavkaUplateId"));

                    b.Property<decimal>("Cijena")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("UplataId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("StavkaUplateId")
                        .HasName("PK__StavkaUp__BFAFD85965F23692");

                    b.HasIndex("UplataId");

                    b.ToTable("StavkaUplate", (string)null);

                    b.HasData(
                        new
                        {
                            StavkaUplateId = 1,
                            Cijena = 20m,
                            IsDeleted = false,
                            Kolicina = 2,
                            UplataId = 1
                        },
                        new
                        {
                            StavkaUplateId = 2,
                            Cijena = 10m,
                            IsDeleted = false,
                            Kolicina = 1,
                            UplataId = 2
                        },
                        new
                        {
                            StavkaUplateId = 3,
                            Cijena = 30m,
                            IsDeleted = false,
                            Kolicina = 3,
                            UplataId = 3
                        },
                        new
                        {
                            StavkaUplateId = 4,
                            Cijena = 20m,
                            IsDeleted = false,
                            Kolicina = 2,
                            UplataId = 4
                        },
                        new
                        {
                            StavkaUplateId = 5,
                            Cijena = 10m,
                            IsDeleted = false,
                            Kolicina = 1,
                            UplataId = 5
                        },
                        new
                        {
                            StavkaUplateId = 6,
                            Cijena = 20m,
                            IsDeleted = false,
                            Kolicina = 2,
                            UplataId = 6
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Termin", b =>
                {
                    b.Property<int>("TerminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("DvoranaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PredstavaId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("TerminId")
                        .HasName("PK__Termin__42126C95643B31F8");

                    b.HasIndex("DvoranaId");

                    b.HasIndex("PredstavaId");

                    b.ToTable("Termin", (string)null);

                    b.HasData(
                        new
                        {
                            TerminId = 1,
                            Datum = new DateTime(2025, 6, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 1,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 2,
                            Datum = new DateTime(2025, 6, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 1,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 3,
                            Datum = new DateTime(2025, 6, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 1,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 4,
                            Datum = new DateTime(2025, 6, 2, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 1,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 5,
                            Datum = new DateTime(2025, 6, 2, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 1,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 6,
                            Datum = new DateTime(2025, 6, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 1,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 7,
                            Datum = new DateTime(2025, 6, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 2,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 8,
                            Datum = new DateTime(2025, 6, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 2,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 9,
                            Datum = new DateTime(2025, 6, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 2,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 10,
                            Datum = new DateTime(2025, 6, 2, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 2,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 11,
                            Datum = new DateTime(2025, 6, 2, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 2,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 12,
                            Datum = new DateTime(2025, 6, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 2,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 13,
                            Datum = new DateTime(2025, 6, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 3,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 14,
                            Datum = new DateTime(2025, 6, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 3,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 15,
                            Datum = new DateTime(2025, 6, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 3,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 16,
                            Datum = new DateTime(2025, 6, 2, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 3,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 17,
                            Datum = new DateTime(2025, 6, 2, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 3,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 18,
                            Datum = new DateTime(2025, 6, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 3,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 19,
                            Datum = new DateTime(2025, 6, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 4,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 20,
                            Datum = new DateTime(2025, 6, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 4,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 21,
                            Datum = new DateTime(2025, 6, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 4,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 22,
                            Datum = new DateTime(2025, 6, 2, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 4,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 23,
                            Datum = new DateTime(2025, 6, 2, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 4,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 24,
                            Datum = new DateTime(2025, 6, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 4,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 25,
                            Datum = new DateTime(2025, 6, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 5,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 26,
                            Datum = new DateTime(2025, 6, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 5,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 27,
                            Datum = new DateTime(2025, 6, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 5,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 28,
                            Datum = new DateTime(2025, 6, 2, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 5,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 29,
                            Datum = new DateTime(2025, 6, 2, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 5,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 30,
                            Datum = new DateTime(2025, 6, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 5,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 31,
                            Datum = new DateTime(2025, 6, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 6,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 32,
                            Datum = new DateTime(2025, 6, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 6,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 33,
                            Datum = new DateTime(2025, 6, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 6,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 34,
                            Datum = new DateTime(2025, 6, 2, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 6,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 35,
                            Datum = new DateTime(2025, 6, 2, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 6,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 36,
                            Datum = new DateTime(2025, 6, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 6,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 37,
                            Datum = new DateTime(2025, 6, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 7,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 38,
                            Datum = new DateTime(2025, 6, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 7,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 39,
                            Datum = new DateTime(2025, 6, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 7,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 40,
                            Datum = new DateTime(2025, 6, 2, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 7,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 41,
                            Datum = new DateTime(2025, 6, 2, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 7,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 42,
                            Datum = new DateTime(2025, 6, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 7,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 43,
                            Datum = new DateTime(2025, 6, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 8,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 44,
                            Datum = new DateTime(2025, 6, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 8,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 45,
                            Datum = new DateTime(2025, 6, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 8,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 46,
                            Datum = new DateTime(2025, 6, 2, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 8,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 47,
                            Datum = new DateTime(2025, 6, 2, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 8,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 48,
                            Datum = new DateTime(2025, 6, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 8,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 49,
                            Datum = new DateTime(2025, 6, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 9,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 50,
                            Datum = new DateTime(2025, 6, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 9,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 51,
                            Datum = new DateTime(2025, 6, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 9,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 52,
                            Datum = new DateTime(2025, 6, 2, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 9,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 53,
                            Datum = new DateTime(2025, 6, 2, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 9,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 54,
                            Datum = new DateTime(2025, 6, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 9,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 55,
                            Datum = new DateTime(2025, 6, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 10,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 56,
                            Datum = new DateTime(2025, 6, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 10,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 57,
                            Datum = new DateTime(2025, 6, 1, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 10,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 58,
                            Datum = new DateTime(2025, 6, 2, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 1,
                            IsDeleted = false,
                            PredstavaId = 10,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 59,
                            Datum = new DateTime(2025, 6, 2, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 2,
                            IsDeleted = false,
                            PredstavaId = 10,
                            Status = "Aktivan"
                        },
                        new
                        {
                            TerminId = 60,
                            Datum = new DateTime(2025, 6, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            DvoranaId = 3,
                            IsDeleted = false,
                            PredstavaId = 10,
                            Status = "Aktivan"
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("UlogaId")
                        .HasName("PK__Uloga__DCAB23CBA4EF472E");

                    b.ToTable("Uloga", (string)null);

                    b.HasData(
                        new
                        {
                            UlogaId = 1,
                            IsDeleted = false,
                            Naziv = "Admin",
                            Opis = "Admin"
                        },
                        new
                        {
                            UlogaId = 2,
                            IsDeleted = false,
                            Naziv = "Gledaoc",
                            Opis = "Gledaoc"
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Uplatum", b =>
                {
                    b.Property<int>("UplataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UplataId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Iznos")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("NacinPlacanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransakcijaId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("UplataId")
                        .HasName("PK__Uplata__C5B165E69C3A436D");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Uplata");

                    b.HasData(
                        new
                        {
                            UplataId = 1,
                            Datum = new DateTime(2025, 5, 11, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Iznos = 20m,
                            KorisnikId = 2,
                            NacinPlacanja = "Paypal",
                            Status = "Approved",
                            TransakcijaId = "PAYID-NANRCPQ2PU03219CF299124H"
                        },
                        new
                        {
                            UplataId = 2,
                            Datum = new DateTime(2025, 5, 12, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Iznos = 10m,
                            KorisnikId = 2,
                            NacinPlacanja = "Paypal",
                            Status = "Approved",
                            TransakcijaId = "PAYID-NANRBLQ8FY05110WM3521649"
                        },
                        new
                        {
                            UplataId = 3,
                            Datum = new DateTime(2025, 5, 12, 19, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Iznos = 30m,
                            KorisnikId = 2,
                            NacinPlacanja = "Paypal",
                            Status = "Approved",
                            TransakcijaId = "PAYID-NANRAJY10H05677AU1376209"
                        },
                        new
                        {
                            UplataId = 4,
                            Datum = new DateTime(2025, 5, 13, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Iznos = 20m,
                            KorisnikId = 2,
                            NacinPlacanja = "Paypal",
                            Status = "Approved",
                            TransakcijaId = "PAYID-NANGBNY0AX857222G028802W"
                        },
                        new
                        {
                            UplataId = 5,
                            Datum = new DateTime(2025, 5, 13, 19, 15, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Iznos = 10m,
                            KorisnikId = 2,
                            NacinPlacanja = "Paypal",
                            Status = "Approved",
                            TransakcijaId = "PAYID-NANGA5A71R48042FP1805639"
                        },
                        new
                        {
                            UplataId = 6,
                            Datum = new DateTime(2025, 5, 13, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            Iznos = 20m,
                            KorisnikId = 2,
                            NacinPlacanja = "Paypal",
                            Status = "Approved",
                            TransakcijaId = "PAYID-NANF7YI7AR60568FL8049816"
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Vijest", b =>
                {
                    b.Property<int>("VijestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VijestId"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("VijestId")
                        .HasName("PK__Vijest__F619121C860AB937");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Vijest", (string)null);

                    b.HasData(
                        new
                        {
                            VijestId = 1,
                            Datum = new DateTime(2025, 5, 10, 19, 15, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            KorisnikId = 2,
                            Naziv = "Otvorena nova sezona teatra",
                            Sadrzaj = "Zvanično je otvorena nova sezona u Narodnom teatru, a publiku očekuje bogat repertoar predstava tokom ljeta."
                        },
                        new
                        {
                            VijestId = 2,
                            Datum = new DateTime(2025, 5, 11, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            KorisnikId = 2,
                            Naziv = "Gostujuća predstava iz Njemacke",
                            Sadrzaj = "Poznato pozorište iz Berlina gostuje naredne sedmice s predstavom 'Balkanski špijun'. Karte su već u prodaji."
                        },
                        new
                        {
                            VijestId = 3,
                            Datum = new DateTime(2025, 5, 12, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            KorisnikId = 2,
                            Naziv = "Radionica glume za mlade",
                            Sadrzaj = "Teatar organizuje besplatnu radionicu glume za srednjoškolce. Prijave su otvorene do 20. maja."
                        },
                        new
                        {
                            VijestId = 4,
                            Datum = new DateTime(2025, 5, 13, 18, 45, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            KorisnikId = 2,
                            Naziv = "Humanitarna predstava za djecu",
                            Sadrzaj = "U saradnji s lokalnim udruženjima, organizuje se predstava čiji će prihod biti doniran dječijem odjeljenju bolnice."
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Zanr", b =>
                {
                    b.Property<int>("ZanrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ZanrId"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("VrijemeBrisanja")
                        .HasColumnType("datetime");

                    b.HasKey("ZanrId")
                        .HasName("PK__Zanr__953868D37E250D1A");

                    b.ToTable("Zanr", (string)null);

                    b.HasData(
                        new
                        {
                            ZanrId = 1,
                            IsDeleted = false,
                            Naziv = "Komedija"
                        },
                        new
                        {
                            ZanrId = 2,
                            IsDeleted = false,
                            Naziv = "Drama"
                        },
                        new
                        {
                            ZanrId = 3,
                            IsDeleted = false,
                            Naziv = "Tragedija"
                        },
                        new
                        {
                            ZanrId = 4,
                            IsDeleted = false,
                            Naziv = "Mjuzikl"
                        },
                        new
                        {
                            ZanrId = 5,
                            IsDeleted = false,
                            Naziv = "Triler"
                        },
                        new
                        {
                            ZanrId = 6,
                            IsDeleted = false,
                            Naziv = "Satira"
                        });
                });

            modelBuilder.Entity("eTeatar.Services.Database.Kartum", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Karta")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKKarta115096");

                    b.HasOne("eTeatar.Services.Database.Rezervacija", "Rezervacija")
                        .WithMany("Karta")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("FKKarta75020");

                    b.HasOne("eTeatar.Services.Database.Sjediste", "Sjediste")
                        .WithMany("Karta")
                        .HasForeignKey("SjedisteId")
                        .IsRequired()
                        .HasConstraintName("FKKarta279567");

                    b.HasOne("eTeatar.Services.Database.Termin", "Termin")
                        .WithMany("Karta")
                        .HasForeignKey("TerminId")
                        .IsRequired()
                        .HasConstraintName("FKKarta684934");

                    b.Navigation("Korisnik");

                    b.Navigation("Rezervacija");

                    b.Navigation("Sjediste");

                    b.Navigation("Termin");
                });

            modelBuilder.Entity("eTeatar.Services.Database.KorisnikUloga", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Korisnik", "Korisnik")
                        .WithMany("KorisnikUlogas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKKorisnikUl810045");

                    b.HasOne("eTeatar.Services.Database.Uloga", "Uloga")
                        .WithMany("KorisnikUlogas")
                        .HasForeignKey("UlogaId")
                        .IsRequired()
                        .HasConstraintName("FKKorisnikUl220885");

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Ocjena", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Ocjenas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKOcjena731337");

                    b.HasOne("eTeatar.Services.Database.Predstava", "Predstava")
                        .WithMany("Ocjenas")
                        .HasForeignKey("PredstavaId")
                        .IsRequired()
                        .HasConstraintName("FKOcjena784566");

                    b.Navigation("Korisnik");

                    b.Navigation("Predstava");
                });

            modelBuilder.Entity("eTeatar.Services.Database.PredstavaGlumac", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Glumac", "Glumac")
                        .WithMany("PredstavaGlumacs")
                        .HasForeignKey("GlumacId")
                        .IsRequired()
                        .HasConstraintName("FKPredstavaG755270");

                    b.HasOne("eTeatar.Services.Database.Predstava", "Predstava")
                        .WithMany("PredstavaGlumacs")
                        .HasForeignKey("PredstavaId")
                        .IsRequired()
                        .HasConstraintName("FKPredstavaG242172");

                    b.Navigation("Glumac");

                    b.Navigation("Predstava");
                });

            modelBuilder.Entity("eTeatar.Services.Database.PredstavaRepertoar", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Predstava", "Predstava")
                        .WithMany("PredstavaRepertoars")
                        .HasForeignKey("PredstavaId")
                        .IsRequired();

                    b.HasOne("eTeatar.Services.Database.Repertoar", "Repertoar")
                        .WithMany("PredstavaRepertoars")
                        .HasForeignKey("RepertoarId")
                        .IsRequired();

                    b.Navigation("Predstava");

                    b.Navigation("Repertoar");
                });

            modelBuilder.Entity("eTeatar.Services.Database.PredstavaZanr", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Predstava", "Predstava")
                        .WithMany("PredstavaZanrs")
                        .HasForeignKey("PredstavaId")
                        .IsRequired()
                        .HasConstraintName("FKPredstavaZ211544");

                    b.HasOne("eTeatar.Services.Database.Zanr", "Zanr")
                        .WithMany("PredstavaZanrs")
                        .HasForeignKey("ZanrId")
                        .IsRequired()
                        .HasConstraintName("FKPredstavaZ6500");

                    b.Navigation("Predstava");

                    b.Navigation("Zanr");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Rezervacija", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKRezervacij849203");

                    b.HasOne("eTeatar.Services.Database.Termin", "Termin")
                        .WithMany("Rezervacijas")
                        .HasForeignKey("TerminId")
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Termin");
                });

            modelBuilder.Entity("eTeatar.Services.Database.RezervacijaSjediste", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Rezervacija", "Rezervacija")
                        .WithMany("RezervacijaSjedistes")
                        .HasForeignKey("RezervacijaId")
                        .IsRequired();

                    b.HasOne("eTeatar.Services.Database.Sjediste", "Sjediste")
                        .WithMany("RezervacijaSjedistes")
                        .HasForeignKey("SjedisteId")
                        .IsRequired()
                        .HasConstraintName("FKSjediste277089");

                    b.Navigation("Rezervacija");

                    b.Navigation("Sjediste");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Sjediste", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Dvorana", "Dvorana")
                        .WithMany("Sjedistes")
                        .HasForeignKey("DvoranaId")
                        .IsRequired()
                        .HasConstraintName("FKSjediste19417");

                    b.Navigation("Dvorana");
                });

            modelBuilder.Entity("eTeatar.Services.Database.StavkaUplate", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Uplatum", "Uplata")
                        .WithMany("StavkaUplates")
                        .HasForeignKey("UplataId")
                        .IsRequired()
                        .HasConstraintName("FKStavkaUpla481381");

                    b.Navigation("Uplata");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Termin", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Dvorana", "Dvorana")
                        .WithMany("Termins")
                        .HasForeignKey("DvoranaId")
                        .IsRequired()
                        .HasConstraintName("FKTermin31281");

                    b.HasOne("eTeatar.Services.Database.Predstava", "Predstava")
                        .WithMany("Termins")
                        .HasForeignKey("PredstavaId")
                        .IsRequired()
                        .HasConstraintName("FKTermin545750");

                    b.Navigation("Dvorana");

                    b.Navigation("Predstava");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Uplatum", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Uplata")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKUplata894550");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Vijest", b =>
                {
                    b.HasOne("eTeatar.Services.Database.Korisnik", "Korisnik")
                        .WithMany("Vijests")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("FKVijest785774");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Dvorana", b =>
                {
                    b.Navigation("Sjedistes");

                    b.Navigation("Termins");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Glumac", b =>
                {
                    b.Navigation("PredstavaGlumacs");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Korisnik", b =>
                {
                    b.Navigation("Karta");

                    b.Navigation("KorisnikUlogas");

                    b.Navigation("Ocjenas");

                    b.Navigation("Rezervacijas");

                    b.Navigation("Uplata");

                    b.Navigation("Vijests");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Predstava", b =>
                {
                    b.Navigation("Ocjenas");

                    b.Navigation("PredstavaGlumacs");

                    b.Navigation("PredstavaRepertoars");

                    b.Navigation("PredstavaZanrs");

                    b.Navigation("Termins");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Repertoar", b =>
                {
                    b.Navigation("PredstavaRepertoars");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Rezervacija", b =>
                {
                    b.Navigation("Karta");

                    b.Navigation("RezervacijaSjedistes");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Sjediste", b =>
                {
                    b.Navigation("Karta");

                    b.Navigation("RezervacijaSjedistes");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Termin", b =>
                {
                    b.Navigation("Karta");

                    b.Navigation("Rezervacijas");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Uloga", b =>
                {
                    b.Navigation("KorisnikUlogas");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Uplatum", b =>
                {
                    b.Navigation("StavkaUplates");
                });

            modelBuilder.Entity("eTeatar.Services.Database.Zanr", b =>
                {
                    b.Navigation("PredstavaZanrs");
                });
#pragma warning restore 612, 618
        }
    }
}
